#!/usr/bin/env bash

wpg-tile() {
  local wallpaper_path="$1"

  # If no wallpaper path is provided, choose a random one
  if [ -z "$wallpaper_path" ]; then
    local walls_dir="${HOME}/Pictures/bg"
    wallpaper_path="$(find "$walls_dir" -type f | shuf -n 1)"
  fi

  wallpaper_path=$(realpath "$wallpaper_path")

  wpg \
    --noreload \
    --backend haishoku \
    -n \
    -s "$wallpaper_path"
  wal \
    --cols16 \
    --backend haishoku \
    -ne \
    -i "$wallpaper_path" \
    -b "#000000" \
    # -p pywal16
}

gradience-wrap () {
  if [ ! -d "${XDG_CONFIG_HOME}/presets/user" ]; then
    mkdir -p "${XDG_CONFIG_HOME}/presets/user"
  fi
  cp -f "${XDG_CACHE_HOME}/wal/pywal.json" "${XDG_CONFIG_HOME}/presets/user/pywal.json"
  # gradience-cli monet -n pywal -p "$wallpaper_path" --theme dark
  gradience-cli apply -n pywal --gtk gtk4
}

# Use the wpg-tile function with the provided or default wallpaper file path
wpg-tile "$1"


gradience-wrap &

# reloading bunch of stuff
if pgrep "swaybg" > /dev/null; then
  killall swaybg
fi
swaybg -m fit -i "$(< "${XDG_CACHE_HOME}/wal/wal")" &

# reloading sway colors
# if [ $(pgrep "sway$" | xargs ps -o etimes=) -gt 60 ]; then
  # source ~/.cache/wal/colors-sway-quick
  . ~/.cache/wal/colors.sh

  swaymsg "client.focused $background $color11 $foreground"
  swaymsg "client.focused_inactive $background $background $foreground"
  swaymsg "client.unfocused $background $background $foreground"
  swaymsg "client.urgent $background $background $foreground"
  swaymsg "client.placeholder $background $background $foreground"
  swaymsg "output * bg $background solid_color"
# fi

if ! pgrep "waybar" > /dev/null; then
  waybar &
fi
swaync-client -rs &
swaync-client -R &
emacsclient --eval "(load-theme 'ewal-doom-one t)" &

if pgrep "qutebrowser" > /dev/null; then
  qutebrowser :config-source &
fi

if pgrep "firefox" > /dev/null; then
  pywalfox update &
fi

notify-send "New rice applied"
