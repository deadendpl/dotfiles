#!/usr/bin/env bash

wpg-tile() {
  local wallpaper_path="$1"

  # If no wallpaper path is provided, choose a random one
  if [ -z "$wallpaper_path" ]; then
    local walls_dir="${HOME}/Pictures/bg"
    wallpaper_path="$(find "$walls_dir" -type f | shuf -n 1)"
  fi

  wallpaper_path=$(realpath "$wallpaper_path")

  wpg \
    --noreload \
    --backend haishoku \
    -n \
    -s "$wallpaper_path"
  wal \
    --cols16 \
    --backend haishoku \
    -ne \
    -b "#151515" \
    -i "$wallpaper_path" \
    # -p pywal16
}

gradience-wrap () {
  if [ ! -d "${XDG_CONFIG_HOME}/presets/user" ]; then
    mkdir -p "${XDG_CONFIG_HOME}/presets/user"
  fi
  cp -f "${XDG_CACHE_HOME}/wal/pywal.json" "${XDG_CONFIG_HOME}/presets/user/pywal.json"
  # gradience-cli monet -n pywal -p "$wallpaper_path" --theme dark
  gradience-cli apply -n pywal --gtk gtk4
}

# file-line-change() {
#   arg1=$(realpath "$1")  # file name
#   arg2=$2                # string in a line that will be replaced
#   arg3=$3                # string that will replace the line

    # Get the line containing "@import"
#   old_line=$(grep "$arg2" "$arg1")

    # Check if the old line exists in the file
#   if [ -n "$old_line" ]; then
#     # Replace the line using sed
#     new_line="$arg3"
#     sed -i "s|$old_line|$new_line|" "$arg1"
#     echo "Line replaced successfully in $arg1"
#   else
#     echo "Old line not found in the file."
#   fi
# }

# waybar
# file-line-change "${XDG_CONFIG_HOME}/waybar/style.css" "@import" "@import url('$(realpath $HOME/.cache/wal/colors-waybar.css)');"
# qutebrowser
# file-line-change "${XDG_CONFIG_HOME}/qutebrowser/start/styles.css" "@import" "@import url('$(realpath $HOME/.cache/wal/colors.css)');"
# zathura
# file-line-change "${XDG_CONFIG_HOME}/zathura/zathurarc" "include" "include $(realpath $HOME/.cache/wal/colors-zathurarc)"

# Use the wpg-tile function with the provided or default wallpaper file path
wpg-tile "$1"

# It's not the best way, as it will still reload sway when sway starts up
if ps -Af | grep "sway$" > /dev/null; then
  swaymsg reload
fi

gradience-wrap &

# reloading bunch of stuff
if pgrep "swaybg" > /dev/null; then
  killall swaybg
fi
swaybg -m fit -i "$(< "${XDG_CACHE_HOME}/wal/wal")" &
if ! pgrep "waybar" > /dev/null; then
  waybar &
fi
swaync-client -rs &
swaync-client -R &
emacsclient --eval "(load-theme 'ewal-doom-one t)" &

if pgrep "qutebrowser" > /dev/null; then
  qutebrowser :config-source &
fi

if pgrep "firefox" > /dev/null; then
  pywalfox update &
fi

notify-send "New rice applied"
